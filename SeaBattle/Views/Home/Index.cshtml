@model DateViewModel
<!DOCTYPE html>
<html>
<head>
    <title>Sea Battles</title>
    <link rel="stylesheet" asp-href-include="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" asp-href-include="~/css/site.css" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
</head>
<body>
    <div class="container-fluid" style="margin-top:50px">
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-3"><div class="notification none" style="text-align:center" id="notif_content"></div></div>
            <div class="col-md-4"></div>
        </div>
        <div class="welcome">
            <span class="welcome-text">Sea Battles</span>
            <img src="~/img/welcome.png" class="welcome-image" />
            <br />
            <input type="text" readonly id="connectionIDtxt" class="form-control" onclick="this.select();" /><br />
            <input type="button" value="Play" id="connectBtn" class="btn" />


        </div>
        <div class="row none" id="maincontainer">
            <div class="col-lg-5 battlefield battlefield__self battlefield__wait">
                <div class="battlefield-gap">
                    <table class="battlefield-table" style="margin-left:105px;float:left">
                        <tbody>
                            <tr class="battlefield-row">
                                <td></td>
                                @for (int i = 0; i < 10; i++)
                                {
                                    <td class="battlefield-cell battlefield-cell__box">@i</td>
                                }
                            </tr>
                            <tr>
                                <td></td>
                                @for (int i = 0; i < 10; i++)//1-10
                                {
                                    <td style="text-align:center">@Convert.ToChar(i + 65)</td>
                                }
                            </tr>
                            @for (int i = 0; i < GameCore.Field.Size; i++)
                            {

                                <tr class="battlefield-row">
                                    <td>@Convert.ToInt32(i + 1)</td>
                                    @for (int j = 0; j < GameCore.Field.Size; j++)
                                    {
                                        <td class="battlefield-cell battlefield-cell__empty">
                                            <div class="battlefield-cell-content" data-y="@i" data-x="@j"></div>
                                        </td>
                                    }
                                </tr>
                            }

                        </tbody>
                    </table>

                </div>

                @*<div class="battlefield-stat">

                    <div class="ship-types">

                        <div class="ship-type ship-type__len_4">

                            <span class="ship">

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>
                            </span>
                        </div>

                        <div class="ship-type ship-type__len_3">

                            <span class="ship">

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>
                            </span>

                            <span class="ship">

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>
                            </span>
                        </div>

                        <div class="ship-type ship-type__len_2">

                            <span class="ship">

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>
                            </span>

                            <span class="ship">

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>
                            </span>

                            <span class="ship ship__killed" data-coords="5,9;5,8">

                                <span class="ship-part">
                                </span>

                                <span class="ship-part">
                                </span>
                            </span>
                        </div>

                        <div class="ship-type ship-type__len_1">

                            <span class="ship">

                                <span class="ship-part">
                                </span>
                            </span>

                            <span class="ship">

                                <span class="ship-part">
                                </span>
                            </span>

                            <span class="ship">

                                <span class="ship-part">
                                </span>
                            </span>

                            <span class="ship">

                                <span class="ship-part">
                                </span>
                            </span>
                        </div>
                    </div>
                </div>*@
            </div>
            <div class="col-lg-5 battlefield battlefield__rival battlefield__wait" id="enemy">
                <div class="battlefield-gap">
                    <table class="battlefield-table" style="margin-right:105px;float:right">
                        <tbody>
                            <tr>
                                <td></td>
                                @for (int i = 0; i < 10; i++)//1-10
                                {
                                    <td style="text-align:center">@Convert.ToChar(i + 65)</td>
                                }
                            </tr>
                            @for (int i = 0; i < GameCore.Field.Size; i++)
                            {
                                <tr class="battlefield-row">
                                    <td>@Convert.ToInt32(i + 1)</td>
                                    @for (int j = 0; j < GameCore.Field.Size; j++)
                                    {

                                        <td class="battlefield-cell battlefield-cell__empty">
                                            <div class="battlefield-cell-content" data-y="@i" data-x="@j"></div>
                                        </td>


                                    }
                                </tr>
                            }
                        </tbody>

                    </table>

                </div>

            </div>

        </div>


    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/signalr/signalr.min.js"></script>
    <script>
    //Connect hub (SIGNALR Core....)
        //TODO CHANGE ALL JS SHITS IN JQUERY
        var _connectionId;


        function ReadyStart(Yes) {
            if (Yes) {
                $(".welcome").addClass("none");
                $("#maincontainer").removeClass("none");
                $(".battlefield__rival").removeClass("battlefield__wait").addClass("battlefield__start");
                $(".notification").removeClass("none");
            } else {
                $(".welcome").removeClass("none");
                $("#maincontainer").addClass("none");
                $(".battlefield__rival").addClass("battlefield__wait").removeClass("battlefield__start");
                $(".notification").addClass("none");
            }
        }
        function YourTurn(Yes) {
            if (Yes) {
                $(".battlefield__self").addClass("battlefield__wait");
                $(".battlefield__rival").removeClass("battlefield__wait");
            } else {
                $(".battlefield__self").removeClass("battlefield__wait");
                $(".battlefield__rival").addClass("battlefield__wait");
            }
        }

        $(".battlefield__rival tr td.battlefield-cell__empty").click(function (e) {
            newValue = 0;
            let currentElement = $(this);
            let x = currentElement.children().data("x");
            let y = currentElement.children().data("y");
            console.log(x, y);
            hubConnection.invoke("SendCordinateEnemy", x, y, _connectionId);//GetValue

            //setTimeout(SetStatusColor, 100, currentElement);
        });
        function SetStatusColor(currentElement,value) {
            switch (value) {
                case 2:
                    currentElement.removeClass("battlefield-cell__empty").removeClass("battlefield-cell__busy").addClass("battlefield-cell__shoot");
                    break;
                case -1:
                    currentElement.removeClass("battlefield-cell__empty").removeClass("battlefield-cell__busy").addClass("battlefield-cell__missed");
                    break;
                case 0:
                    currentElement.removeClass("battlefield-cell__empty").removeClass("battlefield-cell__busy").addClass("battlefield-cell__empty");
                    break;
                case 1:
                    currentElement.removeClass("battlefield-cell__empty").removeClass("battlefield-cell__busy").addClass("battlefield-cell__busy");
                    break;
                default:
            }
            currentElement.attr("disabled", "disabled").off('click');
        }
        function changeurl(connectionID) {
            var new_url = "?id=" + connectionID;
            window.history.pushState("data", "Title", new_url);
            return window.location.href;
        }

        function getRandomConnectionID() {
            return Math.floor(Math.random() * 88888888) + 10000000;//get random connectionID 10000000-99999999
        }
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/seabattle")
            .build();


        hubConnection.on("Notify", function (message) {
            console.log(message);
            $("#notif_content").text(message);
        });

        hubConnection.on("TakeStatus", function (_newField,currentTurn,message,win) {
            let field = JSON.parse(_newField);//Get array[,]
            for (var i = 0; i < 10; i++) {
                for (var j = 0; j < 10; j++) {
                    if (field[i][j] == -1 || field[i][j] == 2) {
                        let currentElement = $(".battlefield__rival tr td.battlefield-cell .battlefield-cell-content[data-x='" +j + "'][data-y='" + i + "']");
                        SetStatusColor(currentElement.parent(), field[i][j]);
                    }
                }
            }
            $("#notif_content").text(message);
            YourTurn(currentTurn);
            if (win) {
                alert("You are Win");
                    location.reload();

            }
      });

        hubConnection.on("SetStatus", function (_newField,currentTurn,message,win) {
            let field = JSON.parse(_newField);//Get array[,]
            for (var i = 0; i < 10; i++) {
                for (var j = 0; j < 10; j++) {
                    if (field[i][j] == -1 || field[i][j] == 2) {
                        let currentElement = $(".battlefield__self tr td.battlefield-cell .battlefield-cell-content[data-x='" + j + "'][data-y='" + i + "']");
                        SetStatusColor(currentElement.parent(), field[i][j]);
                    }
                }
            }
            YourTurn(currentTurn);
            $("#notif_content").text(message);
            if (win) {
                alert("You are Loss");
                    location.reload();
                }


        });
        hubConnection.on("StartGame", function (_newField, connectionId) {
            let field = JSON.parse(_newField);
            for (var i = 0; i < 10; i++) {
                for (var j = 0; j < 10; j++) {
                        let currentElement = $(".battlefield__self tr td.battlefield-cell .battlefield-cell-content[data-x='" + j + "'][data-y='" + i + "']");
                        SetStatusColor(currentElement.parent(), field[i][j]);
                }
            }
            ReadyStart(true);
            YourTurn(false);


        });
        hubConnection.on("ChangeTurn", function (YesOrNo) {
            YourTurn(YesOrNo);
        });

        document.getElementById("connectBtn").addEventListener("click", function (e) {
            hubConnection.invoke("Enter", _connectionId);
            $(".notification").removeClass("none");
        });
        hubConnection.on("GetConnectionID", function (connectionID) {
            console.log("ID: " + connectionID);
        });

        hubConnection.start();
        hubConnection.serverTimeoutInMilliseconds = 100000;//100 second
            window.onload = function () {
                @if (Model.ConnectionID!=null)
                {
                <text>
                _connectionId = @Model.ConnectionID;
                </text>
            }
            else
            {
                <text>
                _connectionId = getRandomConnectionID();
                </text>
            }

                let textBox = $("#connectionIDtxt");
                textBox.attr("value", changeurl(_connectionId));//changeurl and return new url to value TextBox
                textBox.attr("data-value", _connectionId);
            }
            //setTimeout(ConnectWithExistGroup, 500);//SetTimeout->For First ConnectHub... tick tack... Second->ConnectGroup

    </script>
</body>
</html>